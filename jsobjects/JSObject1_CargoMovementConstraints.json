{
  "unpublishedCollection": {
    "name": "JSObject1",
    "pageId": "CargoMovementConstraints",
    "pluginId": "js-plugin",
    "pluginType": "JS",
    "actions": [],
    "archivedActions": [],
    "body": "export default {\t\n\tInit:() => {\n\t\tif(Tabs1.selectedTab==\"Create CMCs\"){\n\t\t\tstoreValue(\"key_CMCPayload\", \"\");\n\t\t\tstoreValue(\"key_AddCMCs_APIFail\", \"\");\n\t\t\tstoreValue(\"key_AddCMCs_Response\", \"\");\n\t\t\tstoreValue(\"key_AddCMCs_ResponseMsg\", \"\");\n\t\t}\n\t\telse{\n\t\t\tstoreValue(\"key_GetCMCs_Response\", '');\n\t\t\tstoreValue(\"key_GetCMCs_APIFail\", \"\")\n\t\t}\n\t},\n\tTransformGetCMCsResponse: () => {\n\t\tlet API_response = Array(appsmith.store.key_GetCMCs_Response);\n\t\tlet list_ids = [];\n\t\tlet list_productIds=\"\";\n\t\tlist_ids=Input_PCIds.text.split(\",\");\n\t\tlet array_GetCMC = [];\t\t\n\t\tfor (let i=0; i< list_ids.length; i++){\n\t\t\tif (typeof API_response[0][list_ids[i]] == 'object') {\n\t\t\t\t// repeat rows (pcId, providerId, reportedDate, etc) for each products. Only show common info on first row\t\n\t\t\t\tfor (let j=0; j< API_response[0][list_ids[i]].products.length; j++){\n\t\t\t\t\tarray_GetCMC.push({\n\t\t\t\t\t\t\"PC_id\": (j==0?API_response[0][String(list_ids[i])].portCallId:null),\n\t\t\t\t\t\t\"Product_Id\": API_response[0][String(list_ids[i])].products[j].productId,\n\t\t\t\t\t\t\"Quantity\": (API_response[0][String(list_ids[i])].products[j].quantity==null)?null:(API_response[0][String(list_ids[i])].products[j].quantity.value+\" \"+API_response[0][String(list_ids[i])].products[j].quantity.unit),\n\t\t\t\t\t\t\"Ratio\": (API_response[0][String(list_ids[i])].products[j].ratio==null)?null:(API_response[0][String(list_ids[i])].products[j].ratio.value),\n\t\t\t\t\t\t\"Provider_Id\": (j==0?API_response[0][String(list_ids[i])].providerId:null),\n\t\t\t\t\t\t\"Verified_CMC\": (j==0?API_response[0][String(list_ids[i])].verifiedCmc:null),\n\t\t\t\t\t\t\"Reported_Date\": (j==0?API_response[0][String(list_ids[i])].reportedDate:null),\n\t\t\t\t\t\t\"Added_At\": (j==0?API_response[0][String(list_ids[i])].addedAt:null),\n\t\t\t\t\t\t\"Updated_At\": (j==0?API_response[0][String(list_ids[i])].updatedAt:null),\n\t\t\t\t\t\t\"CreatedBy_AnalystId\": (j==0?API_response[0][String(list_ids[i])].createdByAnalystId:null),\n\t\t\t\t\t\t\"UpdatedBy_AnalystId\": (j==0?API_response[0][String(list_ids[i])].updatedByAnalystId:null)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn array_GetCMC;\t\t\n\t},\n\tGetCMCs:()=>{\t\t\n\t\tlet array_display = [];\n\t\tswitch(Platform.selectedOptionLabel){\n\t\t\tcase \"Liquids\":\n\t\t\t\tLiquids_GetCMCs.run(\n\t\t\t\t\t//success\n\t\t\t\t\t()=>{\n\t\t\t\t\t\t\tstoreValue(\"key_GetCMCs_Response\",JSON.parse(Liquids_GetCMCs.data)) ;\n\t\t\t\t\t\t\tstoreValue(\"key_GetCMCs_APIFail\", \"\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t//fail\n\t\t\t\t\t()=>{\t\t\t\n\t\t\t\t\t\t\tif(Liquids_GetCMCs.data == null){\n\t\t\t\t\t\t\t\tshowAlert(\"Something went wrong - Can't connect to the API - PLEASE LOG IN AGAIN\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tstoreValue(\"key_GetCMCs_Response\", ''); storeValue(\"key_GetCMCs_APIFail\", Liquids_GetCMCs.data.errors)}\n\t\t\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase \"LPG\":\n\t\t\t\tLPG_GetCMCs.run(\n\t\t\t\t\t//success\n\t\t\t\t\t()=>{\n\t\t\t\t\t\t\tstoreValue(\"key_GetCMCs_Response\",JSON.parse(LPG_GetCMCs.data)) ;\n\t\t\t\t\t\t\tstoreValue(\"key_GetCMCs_APIFail\", \"\")\n\t\t\t\t\t\t\t},\n\t\t\t\t\t//fail\n\t\t\t\t\t()=>{\t\t\t\n\t\t\t\t\t\t\tif(LPG_GetCMCs.data == null){\n\t\t\t\t\t\t\t\tshowAlert(\"Something went wrong - Can't connect to the API - PLEASE LOG IN AGAIN\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tstoreValue(\"key_GetCMCs_Response\", ''); storeValue(\"key_GetCMCs_APIFail\", LPG_GetCMCs.data.errors)}\n\t\t\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tbreak;\t\t\t\n\t\t\tcase \"LNG\":\n\t\t\t\tLNG_GetCMCs.run(\n\t\t\t\t\t//success\n\t\t\t\t\t()=>{\n\t\t\t\t\t\t\tstoreValue(\"key_GetCMCs_Response\",JSON.parse(LNG_GetCMCs.data)) ;\n\t\t\t\t\t\t\tstoreValue(\"key_GetCMCs_APIFail\", \"\")\n\t\t\t\t\t\t\t},\n\t\t\t\t\t//fail\n\t\t\t\t\t()=>{\t\t\t\n\t\t\t\t\t\t\tif(LNG_GetCMCs.data == null){\n\t\t\t\t\t\t\t\tshowAlert(\"Something went wrong - Can't connect to the API - PLEASE LOG IN AGAIN\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tstoreValue(\"key_GetCMCs_Response\", ''); storeValue(\"key_GetCMCs_APIFail\", LNG_GetCMCs.data.errors)}\n\t\t\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tbreak;\t\t\t\t\n\t\t\tcase \"Dry\":\n\t\t\t\tDry_GetCMCs.run(\n\t\t\t\t\t//success\n\t\t\t\t\t()=>{\n\t\t\t\t\t\t\tstoreValue(\"key_GetCMCs_Response\",JSON.parse(Dry_GetCMCs.data)) ;\n\t\t\t\t\t\t\tstoreValue(\"key_GetCMCs_APIFail\", \"\")\n\t\t\t\t\t\t\t},\n\t\t\t\t\t//fail\n\t\t\t\t\t()=>{\t\t\t\n\t\t\t\t\t\t\tif(Dry_GetCMCs.data == null){\n\t\t\t\t\t\t\t\tshowAlert(\"Something went wrong - Can't connect to the API - PLEASE LOG IN AGAIN\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tstoreValue(\"key_GetCMCs_Response\", ''); storeValue(\"key_GetCMCs_APIFail\", Dry_GetCMCs.data.errors)}\n\t\t\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tbreak;\t\t\t\t\t\n\t\t}\n\t},\n\tAddCMCs: () =>{\n\t\tswitch(Platform.selectedOptionLabel){\n\t\t\tcase \"Liquids\":\n\t\t\t\tLiquids_AddCMCs.run(\n\t\t\t\t\t//success\n\t\t\t\t\t()=>{\n\t\t\t\t\t\t\tstoreValue(\"key_AddCMCs_ResponseMsg\", \"CMCs inserted\");\n\t\t\t\t\t\t\tstoreValue(\"key_AddCMCs_Response\",Liquids_AddCMCs.data) ;\n\t\t\t\t\t\t\tstoreValue(\"key_AddCMCs_APIFail\", \"\")\n\t\t\t\t\t\t\t},\n\t\t\t\t\t//fail\n\t\t\t\t\t()=>{\n\t\t\t\t\t\t\tif(Liquids_AddCMCs.data == null){\n\t\t\t\t\t\t\t\tshowAlert(\"Something went wrong - Can't connect to the API - PLEASE LOG IN AGAIN\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tstoreValue(\"key_AddCMCs_ResponseMsg\", \"CMCs not inserted\");\n\t\t\t\t\t\t\t\tstoreValue(\"key_AddCMCs_Response\", ''); \n\t\t\t\t\t\t\t\tstoreValue(\"key_AddCMCs_APIFail\", Liquids_AddCMCs.data)}\n\t\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase \"LPG\":\n\t\t\t\tLPG_AddCMCs.run(\n\t\t\t\t\t//success\n\t\t\t\t\t()=>{\n\t\t\t\t\t\t\tstoreValue(\"key_AddCMCs_ResponseMsg\", \"CMCs inserted\");\n\t\t\t\t\t\t\tstoreValue(\"key_AddCMCs_Response\",LPG_AddCMCs.data) ;\n\t\t\t\t\t\t\tstoreValue(\"key_AddCMCs_APIFail\", \"\")\n\t\t\t\t\t\t\t},\n\t\t\t\t\t//fail\n\t\t\t\t\t()=>{\n\t\t\t\t\t\t\tif(LPG_AddCMCs.data == null){\n\t\t\t\t\t\t\t\tshowAlert(\"Something went wrong - Can't connect to the API - PLEASE LOG IN AGAIN\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tstoreValue(\"key_AddCMCs_ResponseMsg\", \"CMCs not inserted\");\n\t\t\t\t\t\t\t\tstoreValue(\"key_AddCMCs_Response\", ''); \n\t\t\t\t\t\t\t\tstoreValue(\"key_AddCMCs_APIFail\", LPG_AddCMCs.data)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\t\n\t\t\t\t);\n\t\t\t\tbreak;\t\t\t\n\t\t\tcase \"LNG\":\n\t\t\t\tLNG_AddCMCs.run(\n\t\t\t\t\t//success\n\t\t\t\t\t()=>{\n\t\t\t\t\t\t\tstoreValue(\"key_AddCMCs_ResponseMsg\", \"CMCs inserted\");\n\t\t\t\t\t\t\tstoreValue(\"key_AddCMCs_Response\",LNG_AddCMCs.data) ;\n\t\t\t\t\t\t\tstoreValue(\"key_AddCMCs_APIFail\", \"\")\n\t\t\t\t\t\t\t},\n\t\t\t\t\t//fail\n\t\t\t\t\t()=>{\n\t\t\t\t\t\t\tif(LNG_AddCMCs.data == null){\n\t\t\t\t\t\t\t\tshowAlert(\"Something went wrong - Can't connect to the API - PLEASE LOG IN AGAIN\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tstoreValue(\"key_AddCMCs_ResponseMsg\", \"CMCs not inserted\");\n\t\t\t\t\t\t\t\tstoreValue(\"key_AddCMCs_Response\", ''); \n\t\t\t\t\t\t\t\tstoreValue(\"key_AddCMCs_APIFail\", LNG_AddCMCs.data)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tbreak;\t\t\t\t\n\t\t\tcase \"Dry\":\n\t\t\t\tDry_AddCMCs.run(\n\t\t\t\t\t//success\n\t\t\t\t\t()=>{\n\t\t\t\t\t\t\tstoreValue(\"key_AddCMCs_ResponseMsg\", \"CMCs inserted\");\n\t\t\t\t\t\t\tstoreValue(\"key_AddCMCs_Response\",Dry_AddCMCs.data) ;\n\t\t\t\t\t\t\tstoreValue(\"key_AddCMCs_APIFail\", \"\")\n\t\t\t\t\t\t\t},\n\t\t\t\t\t//fail\n\t\t\t\t\t()=>{\n\t\t\t\t\t\t\tif(Dry_AddCMCs.data == null){\n\t\t\t\t\t\t\t\tshowAlert(\"Something went wrong - Can't connect to the API - PLEASE LOG IN AGAIN\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\t\t\n\t\t\t\t\t\t\t\tstoreValue(\"key_AddCMCs_ResponseMsg\", \"CMCs not inserted\");\n\t\t\t\t\t\t\t\tstoreValue(\"key_AddCMCs_Response\", ''); \n\t\t\t\t\t\t\t\tstoreValue(\"key_AddCMCs_APIFail\", Dry_AddCMCs.data)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tbreak;\t\t\t\t\t\n\t\t}\n\t},\n\tcreateNewGsheet: () =>{\t\t\n\t\tif(CreateNewGsheet_CMCs.data.webViewLink != null){\n\t\t\tshowAlert('Test')\n\t\t\tnavigateTo(CreateNewGsheet_CMCs.data.webViewLink,{},'NEW_WINDOW');\n\t\t}\n\t\telse {\n\t\t\tCreateNewGsheet_CMCs.run(\n\t\t\t\t// success\n\t\t\t\t() => {storeValue('Key_URLCreateCMCs', CreateNewGsheet_CMCs.data.webViewLink);\n\t\t\t\t\t\t\t navigateTo(CreateNewGsheet_CMCs.data.webViewLink,{},'NEW_WINDOW');},\n\t\t\t\t//fail\n\t\t\t\t() => {storeValue('Key_URLCreateCMCs', '');showAlert(\"Something wrong happened - Can't create GSheet\");}\n\t\t\t)\n\t\t}\n\t},\n\tLoadNewCMCs: () => {\n\t\t// Build the payload for the API\n\t\tGetGSheetContent_CMCs.run(\n\t\t\t//success\n\t\t\t() => {\n\t\t\t\tlet array_payload = [];\n\t\t\t\tlet array_products = [];\n\t\t\t\tlet GSheetData = [];\n\t\t\t\tlet j=0;\n\t\t\t\tlet curPC = \"\";\n\t\t\t\tGSheetData = GetGSheetContent_CMCs.data.values;\n\t\t\t\tfor (let i=3;i<GSheetData.length;i++){\n\t\t\t\t\tif (i==3 && (GSheetData[i][0] == null || GSheetData[i][0]==\"\")){\n\t\t\t\t\t\t// 1st row has no data -> pop up error\n\t\t\t\t\t\tshowAlert(\"Something went wrong - no data in GSheet\");\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t//build the payload\n\t\t\t\t\t\t// if PC id is empty or equal to the previous one and productId is not null, then handle as multiple products. Otherwise, new CMC\n\t\t\t\t\t\tcurPC = GSheetData[i][0];\n\t\t\t\t\t\tarray_products = [];\n\t\t\t\t\t\tfor(j=i; j<GSheetData.length; j++){\n\t\t\t\t\t\t\tif ((GSheetData[j][0] == null || GSheetData[j][0]==\"\" || GSheetData[j][0]==curPC) && (GSheetData[j][3] != null || GSheetData[j][3] != \"\")) {\n\t\t\t\t\t\t\t\tarray_products.push({\n\t\t\t\t\t\t\t\t\t\"productId\": GSheetData[j][3],\n\t\t\t\t\t\t\t\t\t\"quantity\": ((GSheetData[j][4]==\"\" || GSheetData[j][4]==null)?null:({\"value\":GSheetData[j][4], \"unit\":GSheetData[j][5]})),\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\"ratio\": ((GSheetData[j][6]==\"\" || GSheetData[j][6]==null)?null:({\"value\":GSheetData[j][6], \"dimension\":\"volume\"}))\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\tarray_payload.push({\n\t\t\t\t\t\t\t\"portCallId\": GSheetData[i][0],\n\t\t\t\t\t\t\t\"providerId\": GSheetData[i][1],\n\t\t\t\t\t\t\t\"verifiedCmc\": ((GSheetData[i][2]==\"\" || GSheetData[i][2]==null)?false:GSheetData[i][2]),\n\t\t\t\t\t\t\t\"products\": array_products\n\t\t\t\t\t\t});\n\t\t\t\t\t\ti=j-1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstoreValue(\"key_CMCPayload\", array_payload);\t\t\n\t\t\t},\n\t\t\t//fail\n\t\t\t() => {showAlert(\"Something went wrong - can't load data\");}\t\t\t\n\t\t)\n\t}\n}",
    "variables": []
  },
  "id": "CargoMovementConstraints_JSObject1",
  "deleted": false,
  "gitSyncId": "61ae2cefd3e4214454c24ccd_61c4343ce89bc475f3cd1614"
}