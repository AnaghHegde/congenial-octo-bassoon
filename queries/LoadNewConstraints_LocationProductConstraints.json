{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "LoadNewConstraints",
    "fullyQualifiedName": "JSObject1.LoadNewConstraints",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "LocationProductConstraints",
    "collectionId": "LocationProductConstraints_JSObject1",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "()=>{\n\t\tGetGSheetContent_LPC.run(\n\t\t\t//success\n\t\t\t() => {\n\t\t\t\tlet array_payload=[];\t\t\n\t\t\t\tlet APIdata = [];\t\t\t\t\t\n\t\t\t\tlet arrayconstraints = [];\n\t\t\t\tAPIdata = GetGSheetContent_LPC.data.values;\n\t\t\t\tif (APIdata.length==3){\n\t\t\t\t\tshowAlert('No data to load')\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tlet j=0;\n\t\t\t\t\tlet curType = \"\";\n\t\t\t\t\tfor (let i=3;i<APIdata.length;i++){\n\t\t\t\t\t\t// build the payload\t\t\t\t\t\t// \n\t\t\t\t\t\t// if PC id is empty or equal to the previous one and productId is not null, then handle as multiple products. Otherwise, new LPC\n\t\t\t\t\t\tcurType = APIdata[i][0];\n\t\t\t\t\t\tarrayconstraints=[];\t\n\t\t\t\t\t\tfor(j=i; j<APIdata.length; j++){\n\t\t\t\t\t\t\tif ((APIdata[j][0] == null || APIdata[j][0]==\"\" || APIdata[j][0]==curType) && (APIdata[j][11] != null || APIdata[j][11] != \"\")) {\n\t\t\t\t\t\t\t\tarrayconstraints.push({\n\t\t\t\t\t\t\t\t\t\"productId\": APIdata[j][11],\n\t\t\t\t\t\t\t\t\t\"ratio\": ((APIdata[j][12]==null||APIdata[j][12]==\"\")?null:APIdata[j][12]),\n\t\t\t\t\t\t\t\t\t\"parcelMin\": ((APIdata[j][13]==null||APIdata[j][13]==\"\")?null:({\"metric\":APIdata[j][13], \"unit\": APIdata[j][14]})),\n\t\t\t\t\t\t\t\t\t\"parcelMax\": ((APIdata[j][15]==null||APIdata[j][15]==\"\")?null:({\"metric\":APIdata[j][15], \"unit\": APIdata[j][16]})),\n\t\t\t\t\t\t\t\t\t\"parcelNominal\": ((APIdata[j][17]==null||APIdata[j][17]==\"\")?null:({\"metric\":APIdata[j][17], \"unit\": APIdata[j][18]})),\n\t\t\t\t\t\t\t\t\t\"parcelTolerance\": ((APIdata[j][19]==null||APIdata[j][19]==\"\")?null:APIdata[j][19])\n\t\t\t\t\t\t\t\t})\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\t\t\t\t\n\t\t\t\t\t\tarray_payload.push({\n\t\t\t\t\t\t\t\"type\": APIdata[i][0],\t\n\t\t\t\t\t\t\t\"source\": ((APIdata[i][1]==null||APIdata[i][1]==\"\")?null:({\"locationId\": APIdata[i][1],\"type\": APIdata[i][2]})), \n\t\t\t\t\t\t\t\"destination\": ((APIdata[i][3]==null||APIdata[i][3]==\"\")?null:({\"locationId\": APIdata[i][3],\"type\": APIdata[i][4]})), \n\t\t\t\t\t\t\t\"start\": ((APIdata[i][5]==null||APIdata[i][5]==\"\")?null:APIdata[i][5]), \n\t\t\t\t\t\t\t\"end\": ((APIdata[i][6]==null||APIdata[i][6]==\"\")?null:APIdata[i][6]), \n\t\t\t\t\t\t\t\"minDwt\": ((APIdata[i][7]==null||APIdata[i][7]==\"\")?null:APIdata[i][7]), \n\t\t\t\t\t\t\t\"maxDwt\": ((APIdata[i][8]==null||APIdata[i][8]==\"\")?null:APIdata[i][8]),\n\t\t\t\t\t\t\t\"minCapacity\": ((APIdata[i][9]==null||APIdata[i][9]==\"\")?null:APIdata[i][9]),\n\t\t\t\t\t\t\t\"maxCapacity\": ((APIdata[i][10]==null||APIdata[i][10]==\"\")?null:APIdata[i][10]),\n\t\t\t\t\t\t\t\"productConstraints\": arrayconstraints\n\t\t\t\t\t\t});\n\t\t\t\t\t\ti=j-1;\n\t\t\t\t\t}\n\t\t\t\t\tstoreValue(\"key_LPC_payload\", array_payload);\n\t\t\t\t}\n\t\t\t},\n\t\t\t//fail\n\t\t\t() => {showAlert(\"Something went wrong - can't load data\");}\t\t\t\n\t\t)\n\t}",
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "()=>{\n\t\tGetGSheetContent_LPC.run(\n\t\t\t//success\n\t\t\t() => {\n\t\t\t\tlet array_payload=[];\t\t\n\t\t\t\tlet APIdata = [];\t\t\t\t\t\n\t\t\t\tlet arrayconstraints = [];\n\t\t\t\tAPIdata = GetGSheetContent_LPC.data.values;\n\t\t\t\tif (APIdata.length==3){\n\t\t\t\t\tshowAlert('No data to load')\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tlet j=0;\n\t\t\t\t\tlet curType = \"\";\n\t\t\t\t\tfor (let i=3;i<APIdata.length;i++){\n\t\t\t\t\t\t// build the payload\t\t\t\t\t\t// \n\t\t\t\t\t\t// if PC id is empty or equal to the previous one and productId is not null, then handle as multiple products. Otherwise, new LPC\n\t\t\t\t\t\tcurType = APIdata[i][0];\n\t\t\t\t\t\tarrayconstraints=[];\t\n\t\t\t\t\t\tfor(j=i; j<APIdata.length; j++){\n\t\t\t\t\t\t\tif ((APIdata[j][0] == null || APIdata[j][0]==\"\" || APIdata[j][0]==curType) && (APIdata[j][11] != null || APIdata[j][11] != \"\")) {\n\t\t\t\t\t\t\t\tarrayconstraints.push({\n\t\t\t\t\t\t\t\t\t\"productId\": APIdata[j][11],\n\t\t\t\t\t\t\t\t\t\"ratio\": ((APIdata[j][12]==null||APIdata[j][12]==\"\")?null:APIdata[j][12]),\n\t\t\t\t\t\t\t\t\t\"parcelMin\": ((APIdata[j][13]==null||APIdata[j][13]==\"\")?null:({\"metric\":APIdata[j][13], \"unit\": APIdata[j][14]})),\n\t\t\t\t\t\t\t\t\t\"parcelMax\": ((APIdata[j][15]==null||APIdata[j][15]==\"\")?null:({\"metric\":APIdata[j][15], \"unit\": APIdata[j][16]})),\n\t\t\t\t\t\t\t\t\t\"parcelNominal\": ((APIdata[j][17]==null||APIdata[j][17]==\"\")?null:({\"metric\":APIdata[j][17], \"unit\": APIdata[j][18]})),\n\t\t\t\t\t\t\t\t\t\"parcelTolerance\": ((APIdata[j][19]==null||APIdata[j][19]==\"\")?null:APIdata[j][19])\n\t\t\t\t\t\t\t\t})\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\t\t\t\t\n\t\t\t\t\t\tarray_payload.push({\n\t\t\t\t\t\t\t\"type\": APIdata[i][0],\t\n\t\t\t\t\t\t\t\"source\": ((APIdata[i][1]==null||APIdata[i][1]==\"\")?null:({\"locationId\": APIdata[i][1],\"type\": APIdata[i][2]})), \n\t\t\t\t\t\t\t\"destination\": ((APIdata[i][3]==null||APIdata[i][3]==\"\")?null:({\"locationId\": APIdata[i][3],\"type\": APIdata[i][4]})), \n\t\t\t\t\t\t\t\"start\": ((APIdata[i][5]==null||APIdata[i][5]==\"\")?null:APIdata[i][5]), \n\t\t\t\t\t\t\t\"end\": ((APIdata[i][6]==null||APIdata[i][6]==\"\")?null:APIdata[i][6]), \n\t\t\t\t\t\t\t\"minDwt\": ((APIdata[i][7]==null||APIdata[i][7]==\"\")?null:APIdata[i][7]), \n\t\t\t\t\t\t\t\"maxDwt\": ((APIdata[i][8]==null||APIdata[i][8]==\"\")?null:APIdata[i][8]),\n\t\t\t\t\t\t\t\"minCapacity\": ((APIdata[i][9]==null||APIdata[i][9]==\"\")?null:APIdata[i][9]),\n\t\t\t\t\t\t\t\"maxCapacity\": ((APIdata[i][10]==null||APIdata[i][10]==\"\")?null:APIdata[i][10]),\n\t\t\t\t\t\t\t\"productConstraints\": arrayconstraints\n\t\t\t\t\t\t});\n\t\t\t\t\t\ti=j-1;\n\t\t\t\t\t}\n\t\t\t\t\tstoreValue(\"key_LPC_payload\", array_payload);\n\t\t\t\t}\n\t\t\t},\n\t\t\t//fail\n\t\t\t() => {showAlert(\"Something went wrong - can't load data\");}\t\t\t\n\t\t)\n\t}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "LocationProductConstraints_LoadNewConstraints",
  "deleted": false,
  "gitSyncId": "61ae2cefd3e4214454c24ccd_61cd7264a4437918c01f8877"
}