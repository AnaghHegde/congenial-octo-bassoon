{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "LoadNewCMCs",
    "fullyQualifiedName": "JSObject1.LoadNewCMCs",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "CargoMovementConstraints",
    "collectionId": "CargoMovementConstraints_JSObject1",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "() => {\n\t\t// Build the payload for the API\n\t\tGetGSheetContent_CMCs.run(\n\t\t\t//success\n\t\t\t() => {\n\t\t\t\tlet array_payload = [];\n\t\t\t\tlet array_products = [];\n\t\t\t\tlet GSheetData = [];\n\t\t\t\tlet j=0;\n\t\t\t\tlet curPC = \"\";\n\t\t\t\tGSheetData = GetGSheetContent_CMCs.data.values;\n\t\t\t\tfor (let i=3;i<GSheetData.length;i++){\n\t\t\t\t\tif (i==3 && (GSheetData[i][0] == null || GSheetData[i][0]==\"\")){\n\t\t\t\t\t\t// 1st row has no data -> pop up error\n\t\t\t\t\t\tshowAlert(\"Something went wrong - no data in GSheet\");\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t//build the payload\n\t\t\t\t\t\t// if PC id is empty or equal to the previous one and productId is not null, then handle as multiple products. Otherwise, new CMC\n\t\t\t\t\t\tcurPC = GSheetData[i][0];\n\t\t\t\t\t\tarray_products = [];\n\t\t\t\t\t\tfor(j=i; j<GSheetData.length; j++){\n\t\t\t\t\t\t\tif ((GSheetData[j][0] == null || GSheetData[j][0]==\"\" || GSheetData[j][0]==curPC) && (GSheetData[j][3] != null || GSheetData[j][3] != \"\")) {\n\t\t\t\t\t\t\t\tarray_products.push({\n\t\t\t\t\t\t\t\t\t\"productId\": GSheetData[j][3],\n\t\t\t\t\t\t\t\t\t\"quantity\": ((GSheetData[j][4]==\"\" || GSheetData[j][4]==null)?null:({\"value\":GSheetData[j][4], \"unit\":GSheetData[j][5]})),\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\"ratio\": ((GSheetData[j][6]==\"\" || GSheetData[j][6]==null)?null:({\"value\":GSheetData[j][6], \"dimension\":\"volume\"}))\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\tarray_payload.push({\n\t\t\t\t\t\t\t\"portCallId\": GSheetData[i][0],\n\t\t\t\t\t\t\t\"providerId\": GSheetData[i][1],\n\t\t\t\t\t\t\t\"verifiedCmc\": ((GSheetData[i][2]==\"\" || GSheetData[i][2]==null)?false:GSheetData[i][2]),\n\t\t\t\t\t\t\t\"products\": array_products\n\t\t\t\t\t\t});\n\t\t\t\t\t\ti=j-1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstoreValue(\"key_CMCPayload\", array_payload);\t\t\n\t\t\t},\n\t\t\t//fail\n\t\t\t() => {showAlert(\"Something went wrong - can't load data\");}\t\t\t\n\t\t)\n\t}",
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": false,
    "clientSideExecution": true,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "() => {\n\t\t// Build the payload for the API\n\t\tGetGSheetContent_CMCs.run(\n\t\t\t//success\n\t\t\t() => {\n\t\t\t\tlet array_payload = [];\n\t\t\t\tlet array_products = [];\n\t\t\t\tlet GSheetData = [];\n\t\t\t\tlet j=0;\n\t\t\t\tlet curPC = \"\";\n\t\t\t\tGSheetData = GetGSheetContent_CMCs.data.values;\n\t\t\t\tfor (let i=3;i<GSheetData.length;i++){\n\t\t\t\t\tif (i==3 && (GSheetData[i][0] == null || GSheetData[i][0]==\"\")){\n\t\t\t\t\t\t// 1st row has no data -> pop up error\n\t\t\t\t\t\tshowAlert(\"Something went wrong - no data in GSheet\");\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t//build the payload\n\t\t\t\t\t\t// if PC id is empty or equal to the previous one and productId is not null, then handle as multiple products. Otherwise, new CMC\n\t\t\t\t\t\tcurPC = GSheetData[i][0];\n\t\t\t\t\t\tarray_products = [];\n\t\t\t\t\t\tfor(j=i; j<GSheetData.length; j++){\n\t\t\t\t\t\t\tif ((GSheetData[j][0] == null || GSheetData[j][0]==\"\" || GSheetData[j][0]==curPC) && (GSheetData[j][3] != null || GSheetData[j][3] != \"\")) {\n\t\t\t\t\t\t\t\tarray_products.push({\n\t\t\t\t\t\t\t\t\t\"productId\": GSheetData[j][3],\n\t\t\t\t\t\t\t\t\t\"quantity\": ((GSheetData[j][4]==\"\" || GSheetData[j][4]==null)?null:({\"value\":GSheetData[j][4], \"unit\":GSheetData[j][5]})),\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\"ratio\": ((GSheetData[j][6]==\"\" || GSheetData[j][6]==null)?null:({\"value\":GSheetData[j][6], \"dimension\":\"volume\"}))\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\tarray_payload.push({\n\t\t\t\t\t\t\t\"portCallId\": GSheetData[i][0],\n\t\t\t\t\t\t\t\"providerId\": GSheetData[i][1],\n\t\t\t\t\t\t\t\"verifiedCmc\": ((GSheetData[i][2]==\"\" || GSheetData[i][2]==null)?false:GSheetData[i][2]),\n\t\t\t\t\t\t\t\"products\": array_products\n\t\t\t\t\t\t});\n\t\t\t\t\t\ti=j-1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstoreValue(\"key_CMCPayload\", array_payload);\t\t\n\t\t\t},\n\t\t\t//fail\n\t\t\t() => {showAlert(\"Something went wrong - can't load data\");}\t\t\t\n\t\t)\n\t}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "CargoMovementConstraints_LoadNewCMCs",
  "deleted": false,
  "gitSyncId": "61ae2cefd3e4214454c24ccd_61c43435e89bc475f3ccfcaf"
}